{"ast":null,"code":"const BASE_URL = 'http://localhost:8888/QUERYBLOG';\n\n// Blog API - Query\nexport const getAllArticles = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/query/article/articles`);\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching articles:', error);\n    throw error;\n  }\n};\nexport const getArticleById = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/query/article/articles/${id}`);\n    return await response.json();\n  } catch (error) {\n    console.error(`Error fetching article ${id}:`, error);\n    throw error;\n  }\n};\nexport const getAllComments = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/comments`);\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching comments:', error);\n    throw error;\n  }\n};\nexport const getCommentById = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/comments/${id}`);\n    return await response.json();\n  } catch (error) {\n    console.error(`Error fetching comment ${id}:`, error);\n    throw error;\n  }\n};\nexport const getAllEvents = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/events`);\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    throw error;\n  }\n};\nexport const getEventById = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/events/${id}`);\n    return await response.json();\n  } catch (error) {\n    console.error(`Error fetching event ${id}:`, error);\n    throw error;\n  }\n};\nexport const getAllNews = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/news`);\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching news:', error);\n    throw error;\n  }\n};\nexport const getNewsById = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/news/${id}`);\n    return await response.json();\n  } catch (error) {\n    console.error(`Error fetching news ${id}:`, error);\n    throw error;\n  }\n};\nexport const getAllTags = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/tags`);\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching tags:', error);\n    throw error;\n  }\n};\nexport const getTagById = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/tags/${id}`);\n    return await response.json();\n  } catch (error) {\n    console.error(`Error fetching tag ${id}:`, error);\n    throw error;\n  }\n};\nexport const getAllDomains = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/domains`);\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching domains:', error);\n    throw error;\n  }\n};\nexport const getDomainById = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/domains/${id}`);\n    return await response.json();\n  } catch (error) {\n    console.error(`Error fetching domain ${id}:`, error);\n    throw error;\n  }\n};\nexport const getAllAuthors = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/utilisateurs`);\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching authors:', error);\n    throw error;\n  }\n};\nexport const getAuthorById = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/utilisateurs/${id}`);\n    return await response.json();\n  } catch (error) {\n    console.error(`Error fetching author ${id}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","getAllArticles","response","fetch","json","error","console","getArticleById","id","getAllComments","getCommentById","getAllEvents","getEventById","getAllNews","getNewsById","getAllTags","getTagById","getAllDomains","getDomainById","getAllAuthors","getAuthorById"],"sources":["C:/Users/koune/Documents/polyinformatiqueV1.1/kounetportfoliocQRS/frontend/src/api/blog/query.js"],"sourcesContent":["const BASE_URL = 'http://localhost:8888/QUERYBLOG';\r\n\r\n// Blog API - Query\r\nexport const getAllArticles = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/query/article/articles`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching articles:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getArticleById = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/query/article/articles/${id}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error fetching article ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAllComments = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/comments`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching comments:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getCommentById = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/comments/${id}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error fetching comment ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAllEvents = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/events`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching events:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getEventById = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/events/${id}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error fetching event ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAllNews = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/news`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching news:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getNewsById = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/news/${id}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error fetching news ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAllTags = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/tags`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching tags:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getTagById = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/tags/${id}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error fetching tag ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAllDomains = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/domains`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching domains:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getDomainById = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/domains/${id}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error fetching domain ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAllAuthors = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/utilisateurs`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching authors:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAuthorById = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/utilisateurs/${id}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error fetching author ${id}:`, error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}