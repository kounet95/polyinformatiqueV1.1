{"ast":null,"code":"const BASE_URL = 'http://localhost:8888/COMMANDEBLOG';\n\n// Blog API - Command\nexport const createArticle = async articleData => {\n  try {\n    const response = await fetch(`${BASE_URL}/blog/command/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(articleData)\n    });\n    return await response.json();\n  } catch (error) {\n    console.error('Error creating article:', error);\n    throw error;\n  }\n};\nexport const createNews = async newsData => {\n  try {\n    const response = await fetch(`${BASE_URL}/blog/command/create-news`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newsData)\n    });\n    return await response.json();\n  } catch (error) {\n    console.error('Error creating news:', error);\n    throw error;\n  }\n};\nexport const createEvent = async eventData => {\n  try {\n    const response = await fetch(`${BASE_URL}/blog/command/create-event`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(eventData)\n    });\n    return await response.json();\n  } catch (error) {\n    console.error('Error creating event:', error);\n    throw error;\n  }\n};\nexport const updateArticle = async (id, articleData) => {\n  try {\n    const response = await fetch(`${BASE_URL}/blog/command/update-article/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(articleData)\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error updating article ${id}:`, error);\n    throw error;\n  }\n};\nexport const updateNews = async (id, newsData) => {\n  try {\n    const response = await fetch(`${BASE_URL}/blog/command/update-news/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newsData)\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error updating news ${id}:`, error);\n    throw error;\n  }\n};\nexport const updateEvent = async (id, eventData) => {\n  try {\n    const response = await fetch(`${BASE_URL}/blog/command/update-event/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(eventData)\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error updating event ${id}:`, error);\n    throw error;\n  }\n};\nexport const deleteArticle = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/blog/command/delete-article/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error deleting article ${id}:`, error);\n    throw error;\n  }\n};\nexport const deleteNews = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/blog/command/delete-news/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error deleting news ${id}:`, error);\n    throw error;\n  }\n};\nexport const deleteEvent = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/blog/command/delete-event/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error deleting event ${id}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","createArticle","articleData","response","fetch","method","headers","body","JSON","stringify","json","error","console","createNews","newsData","createEvent","eventData","updateArticle","id","updateNews","updateEvent","deleteArticle","deleteNews","deleteEvent"],"sources":["C:/Users/koune/Documents/polyinformatiqueV1.1/kounetportfoliocQRS/frontend/src/api/blog/command.js"],"sourcesContent":["const BASE_URL = 'http://localhost:8888/COMMANDEBLOG';\r\n\r\n// Blog API - Command\r\nexport const createArticle = async (articleData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/blog/command/create`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(articleData),\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error creating article:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createNews = async (newsData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/blog/command/create-news`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newsData),\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error creating news:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createEvent = async (eventData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/blog/command/create-event`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(eventData),\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error creating event:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateArticle = async (id, articleData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/blog/command/update-article/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(articleData),\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error updating article ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateNews = async (id, newsData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/blog/command/update-news/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newsData),\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error updating news ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateEvent = async (id, eventData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/blog/command/update-event/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(eventData),\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error updating event ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteArticle = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/blog/command/delete-article/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error deleting article ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteNews = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/blog/command/delete-news/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error deleting news ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteEvent = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/blog/command/delete-event/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error deleting event ${id}:`, error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}