{"ast":null,"code":"const BASE_URL = 'http://localhost:8888';\n\n// Comment API - Command\nexport const createComment = async commentData => {\n  try {\n    const response = await fetch(`${BASE_URL}/comment/command/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(commentData)\n    });\n    return await response.json();\n  } catch (error) {\n    console.error('Error creating comment:', error);\n    throw error;\n  }\n};\nexport const deleteComment = async (commentId, itemId) => {\n  try {\n    const response = await fetch(`${BASE_URL}/comment/command/delete/${commentId}?itemId=${itemId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error deleting comment ${commentId}:`, error);\n    throw error;\n  }\n};\nexport const getCommentEvents = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/comment/command/events/${id}`);\n    return await response.json();\n  } catch (error) {\n    console.error(`Error fetching comment events ${id}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","createComment","commentData","response","fetch","method","headers","body","JSON","stringify","json","error","console","deleteComment","commentId","itemId","getCommentEvents","id"],"sources":["C:/Users/koune/Documents/polyinformatiqueV1.1/kounetportfoliocQRS/frontend/src/api/comment/command.js"],"sourcesContent":["const BASE_URL = 'http://localhost:8888';\r\n\r\n// Comment API - Command\r\nexport const createComment = async (commentData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/comment/command/create`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(commentData),\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error creating comment:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteComment = async (commentId, itemId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/comment/command/delete/${commentId}?itemId=${itemId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error deleting comment ${commentId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getCommentEvents = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/comment/command/events/${id}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error fetching comment events ${id}:`, error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;;AAExC;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,yBAAyB,EAAE;MACjEK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IAClC,CAAC,CAAC;IACF,OAAO,MAAMC,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAOC,SAAS,EAAEC,MAAM,KAAK;EACxD,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,2BAA2Bc,SAAS,WAAWC,MAAM,EAAE,EAAE;MAC/FV,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAO,MAAMH,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0BG,SAAS,GAAG,EAAEH,KAAK,CAAC;IAC5D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,gBAAgB,GAAG,MAAOC,EAAE,IAAK;EAC5C,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,2BAA2BiB,EAAE,EAAE,CAAC;IACxE,OAAO,MAAMd,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiCM,EAAE,GAAG,EAAEN,KAAK,CAAC;IAC5D,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}