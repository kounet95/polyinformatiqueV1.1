{"ast":null,"code":"const BASE_URL = 'http://localhost:8888';\n\n// Comment API - Query\nexport const getAllComments = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/comments`);\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching comments:', error);\n    throw error;\n  }\n};\nexport const getCommentById = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/comments/${id}`);\n    return await response.json();\n  } catch (error) {\n    console.error(`Error fetching comment ${id}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","getAllComments","response","fetch","json","error","console","getCommentById","id"],"sources":["C:/Users/koune/Documents/polyinformatiqueV1.1/kounetportfoliocQRS/frontend/src/api/comment/query.js"],"sourcesContent":["const BASE_URL = 'http://localhost:8888';\r\n\r\n// Comment API - Query\r\nexport const getAllComments = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/comments`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching comments:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getCommentById = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/comments/${id}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error fetching comment ${id}:`, error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;;AAExC;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,WAAW,CAAC;IACpD,OAAO,MAAME,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,aAAaQ,EAAE,EAAE,CAAC;IAC1D,OAAO,MAAMN,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0BG,EAAE,GAAG,EAAEH,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}