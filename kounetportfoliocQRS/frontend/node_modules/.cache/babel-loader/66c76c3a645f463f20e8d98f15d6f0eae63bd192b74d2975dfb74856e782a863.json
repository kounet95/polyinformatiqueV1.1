{"ast":null,"code":"const BASE_URL = 'http://localhost:8888';\n\n// Order API - Command\nexport const createOrder = async orderData => {\n  try {\n    const response = await fetch(`${BASE_URL}/order/command/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(orderData)\n    });\n    return await response.json();\n  } catch (error) {\n    console.error('Error creating order:', error);\n    throw error;\n  }\n};\nexport const addProductToOrder = async (orderId, productData) => {\n  try {\n    const response = await fetch(`${BASE_URL}/order/command/${orderId}/add-product`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(productData)\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error adding product to order ${orderId}:`, error);\n    throw error;\n  }\n};\nexport const confirmOrder = async orderId => {\n  try {\n    const response = await fetch(`${BASE_URL}/order/command/${orderId}/confirm`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error confirming order ${orderId}:`, error);\n    throw error;\n  }\n};\nexport const generateInvoice = async (orderId, invoiceData) => {\n  try {\n    const response = await fetch(`${BASE_URL}/order/command/${orderId}/generate-invoice`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(invoiceData)\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error generating invoice for order ${orderId}:`, error);\n    throw error;\n  }\n};\nexport const payInvoice = async invoiceId => {\n  try {\n    const response = await fetch(`${BASE_URL}/order/command/invoice/${invoiceId}/pay`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error paying invoice ${invoiceId}:`, error);\n    throw error;\n  }\n};\nexport const startShipping = async orderId => {\n  try {\n    const response = await fetch(`${BASE_URL}/order/command/${orderId}/start-shipping`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error starting shipping for order ${orderId}:`, error);\n    throw error;\n  }\n};\nexport const deliverOrder = async orderId => {\n  try {\n    const response = await fetch(`${BASE_URL}/order/command/${orderId}/deliver`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`Error delivering order ${orderId}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","createOrder","orderData","response","fetch","method","headers","body","JSON","stringify","json","error","console","addProductToOrder","orderId","productData","confirmOrder","generateInvoice","invoiceData","payInvoice","invoiceId","startShipping","deliverOrder"],"sources":["C:/Users/koune/Documents/polyinformatiqueV1.1/kounetportfoliocQRS/frontend/src/api/order/command.js"],"sourcesContent":["const BASE_URL = 'http://localhost:8888';\r\n\r\n// Order API - Command\r\nexport const createOrder = async (orderData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/order/command/create`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(orderData),\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error creating order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addProductToOrder = async (orderId, productData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/order/command/${orderId}/add-product`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(productData),\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error adding product to order ${orderId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const confirmOrder = async (orderId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/order/command/${orderId}/confirm`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error confirming order ${orderId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const generateInvoice = async (orderId, invoiceData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/order/command/${orderId}/generate-invoice`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(invoiceData),\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error generating invoice for order ${orderId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const payInvoice = async (invoiceId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/order/command/invoice/${invoiceId}/pay`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error paying invoice ${invoiceId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const startShipping = async (orderId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/order/command/${orderId}/start-shipping`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error starting shipping for order ${orderId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deliverOrder = async (orderId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/order/command/${orderId}/deliver`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error delivering order ${orderId}:`, error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}