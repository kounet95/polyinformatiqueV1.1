{"ast":null,"code":"// Action Types\nimport axios from \"axios\";\nimport { SET_ERROR, SET_LOADING, UPDATE_ARTICLE } from \"./articleActions\";\nconst API_URL_DOMAINS = 'http://localhost:8081/domains/command';\nconst API_URL_QUERY_DOMAIN = 'http://localhost:8082/domains';\nexport const FETCH_DOMAINS = 'FETCH_DOMAINS';\nexport const CREATE_DOMAIN = 'CREATE_DOMAIN';\nexport const UPDATE_DOMAIN = 'UPDATE_DOMAIN';\n\n// Actions domain\nexport const fetchDomains = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING,\n      payload: true\n    });\n    const response = await axios.get(`${API_URL_QUERY_DOMAIN}`);\n    dispatch({\n      type: FETCH_DOMAINS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERROR,\n      payload: error.message\n    });\n    console.log(error.message);\n  } finally {\n    dispatch({\n      type: SET_LOADING,\n      payload: false\n    });\n  }\n};\nexport const createDomain = domainData => async dispatch => {\n  try {\n    const response = await axios.post(`${API_URL_DOMAINS}/create`, domainData);\n    console.log(response.data);\n    dispatch({\n      type: CREATE_DOMAIN,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error.message);\n    dispatch({\n      type: SET_ERROR,\n      payload: error.message\n    });\n  }\n};\nexport const updateDomain = (id, data) => async dispatch => {\n  try {\n    const response = await axios.put(`${API_URL_DOMAINS}/${id}`, data);\n    dispatch({\n      type: UPDATE_DOMAIN,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERROR,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","SET_ERROR","SET_LOADING","UPDATE_ARTICLE","API_URL_DOMAINS","API_URL_QUERY_DOMAIN","FETCH_DOMAINS","CREATE_DOMAIN","UPDATE_DOMAIN","fetchDomains","dispatch","type","payload","response","get","data","error","message","console","log","createDomain","domainData","post","updateDomain","id","put"],"sources":["C:/Users/koune/Documents/polyinformatiqueV1.1/kounetportfoliocQRS/frontend/src/actions/domainActions.js"],"sourcesContent":["\r\n// Action Types\r\nimport axios from \"axios\";\r\nimport {SET_ERROR, SET_LOADING, UPDATE_ARTICLE} from \"./articleActions\";\r\nconst API_URL_DOMAINS = 'http://localhost:8081/domains/command';\r\nconst API_URL_QUERY_DOMAIN = 'http://localhost:8082/domains';\r\n\r\nexport const FETCH_DOMAINS = 'FETCH_DOMAINS';\r\nexport const CREATE_DOMAIN = 'CREATE_DOMAIN';\r\nexport const UPDATE_DOMAIN = 'UPDATE_DOMAIN';\r\n\r\n\r\n\r\n\r\n// Actions domain\r\nexport const fetchDomains = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: SET_LOADING, payload: true });\r\n        const response = await axios.get(`${API_URL_QUERY_DOMAIN}`);\r\n        dispatch({ type: FETCH_DOMAINS, payload: response.data });\r\n    } catch (error) {\r\n        dispatch({ type: SET_ERROR, payload: error.message });\r\n        console.log(error.message);\r\n    } finally {\r\n        dispatch({ type: SET_LOADING, payload: false });\r\n    }\r\n};\r\n\r\nexport const createDomain = (domainData) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL_DOMAINS}/create`, domainData);\r\n        console.log(response.data);\r\n\r\n        dispatch({ type: CREATE_DOMAIN, payload: response.data });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n        dispatch({ type: SET_ERROR, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const updateDomain = (id, data) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.put(`${API_URL_DOMAINS}/${id}`, data);\r\n        dispatch({ type: UPDATE_DOMAIN, payload: response.data });\r\n    } catch (error) {\r\n        dispatch({ type: SET_ERROR, payload: error.message });\r\n    }\r\n};\r\n"],"mappings":"AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AACvE,MAAMC,eAAe,GAAG,uCAAuC;AAC/D,MAAMC,oBAAoB,GAAG,+BAA+B;AAE5D,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;;AAK5C;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAClD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAET,WAAW;MAAEU,OAAO,EAAE;IAAK,CAAC,CAAC;IAC9C,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,GAAGT,oBAAoB,EAAE,CAAC;IAC3DK,QAAQ,CAAC;MAAEC,IAAI,EAAEL,aAAa;MAAEM,OAAO,EAAEC,QAAQ,CAACE;IAAK,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZN,QAAQ,CAAC;MAAEC,IAAI,EAAEV,SAAS;MAAEW,OAAO,EAAEI,KAAK,CAACC;IAAQ,CAAC,CAAC;IACrDC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,OAAO,CAAC;EAC9B,CAAC,SAAS;IACNP,QAAQ,CAAC;MAAEC,IAAI,EAAET,WAAW;MAAEU,OAAO,EAAE;IAAM,CAAC,CAAC;EACnD;AACJ,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAIC,UAAU,IAAK,MAAOX,QAAQ,IAAK;EAC5D,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACsB,IAAI,CAAC,GAAGlB,eAAe,SAAS,EAAEiB,UAAU,CAAC;IAC1EH,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACE,IAAI,CAAC;IAE1BL,QAAQ,CAAC;MAAEC,IAAI,EAAEJ,aAAa;MAAEK,OAAO,EAAEC,QAAQ,CAACE;IAAK,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZE,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,OAAO,CAAC;IAC1BP,QAAQ,CAAC;MAAEC,IAAI,EAAEV,SAAS;MAAEW,OAAO,EAAEI,KAAK,CAACC;IAAQ,CAAC,CAAC;EACzD;AACJ,CAAC;AAED,OAAO,MAAMM,YAAY,GAAGA,CAACC,EAAE,EAAET,IAAI,KAAK,MAAOL,QAAQ,IAAK;EAC1D,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACyB,GAAG,CAAC,GAAGrB,eAAe,IAAIoB,EAAE,EAAE,EAAET,IAAI,CAAC;IAClEL,QAAQ,CAAC;MAAEC,IAAI,EAAEH,aAAa;MAAEI,OAAO,EAAEC,QAAQ,CAACE;IAAK,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZN,QAAQ,CAAC;MAAEC,IAAI,EAAEV,SAAS;MAAEW,OAAO,EAAEI,KAAK,CAACC;IAAQ,CAAC,CAAC;EACzD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}